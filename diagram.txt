@startuml

class "ExamPart" {
  id : Long
  contenido : String
  type : Type
  parent : ExamPart
  childs : List<ExamPart>
}

class "ExamPartContainer" {
  titulo : String
  getQuestions(Type, String) : List<ExamPart>
  findChild(Type, String) : ExamPart
}

class "Pregunta" {
  score : Double
  answer : ExamPart
}

class "ExamRandomBuilder"

class "ExamPartSpecification" {
  examPartType : Type
  title : String
  number : int
  childs : List<ExamPartSpecification>
  of(Type, String) : ExamPartSpecification
  has(Supplier<ExamPartSpecification>)
  fulfill(ExamPartContainer) : boolean
  hasQuestions(int)
  findExamParts(List<ExamPartContainer>) : List<ExamPart>
}

class "ExamSpecification" {
  id : Long
  description : String
  range : DateTimeRange
}

class "PostulantExam" {
  id : Long
  postulante : Postulante
  specification : ExamSpecification
  actualRange : DateTimeRange
  questions : List<PostulantQuestion>
}

class "PostulantQuestion" {
  question : Pregunta
  alternativas : List<ExamPart>
  postulantAnswer : ExamPart
}

"ExamPart" <|-- "ExamPartContainer"
"ExamPart" <|-- "Pregunta"
"ExamPart" <-> "ExamPart" : parent
"Pregunta" --> "ExamPart" : answer
"ExamPartSpecification" --> "*" "ExamPartSpecification" : childs
"PostulantExam" --> "ExamSpecification" : specification
"PostulantExam" --> "*" "PostulantQuestion" : questions
"PostulantQuestion" --> "Pregunta" : question
"PostulantQuestion" --> "*" "ExamPart" : alternativas
"PostulantQuestion" --> "ExamPart" : postulantAnswer

@enduml
